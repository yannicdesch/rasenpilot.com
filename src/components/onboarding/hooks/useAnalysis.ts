
import { useState } from 'react';
import { analyzeImageWithAI } from '@/services/aiAnalysisService';
import { toast } from 'sonner';

export const useAnalysis = () => {
  const [analysisResults, setAnalysisResults] = useState<string | null>(null);
  const [showAnalysis, setShowAnalysis] = useState(false);
  const [isAnalyzing, setIsAnalyzing] = useState(false);

  const getComprehensiveMockAnalysis = () => {
    return `üå± **Umfassende Rasenanalyse - Detaillierter Bericht**

**Gesamtgesundheit:** 7.2/10 (72%)

üîç **Detaillierte Problemanalyse**

**1. N√§hrstoffmangel (Hauptproblem)**
- **Erkannte M√§ngel:** Stickstoff (N) und Kalium (K)
- **Sichtbare Symptome:** Gelbliche Verf√§rbung, schwaches Wachstum, d√ºnne Grasnarbe
- **Vertrauensgrad:** 87%
- **Zeitrahmen f√ºr Verbesserung:** 2-4 Wochen
- **Gesch√§tzte Kosten:** 25-40‚Ç¨

**Spezifische Empfehlungen:**
- Sofort: Bodentest durchf√ºhren (pH-Wert, NPK-Gehalt, Spurenelemente)
- Herbstd√ºngung mit kaliumreichem D√ºnger (NPK-Verh√§ltnis 5-5-20)
- D√ºngung bei Temperaturen zwischen 10-20¬∞C f√ºr optimale Aufnahme
- Nach D√ºngung gr√ºndlich w√§ssern (15-20mm Wasser)

**2. Bodenverdichtung & Entw√§sserungsprobleme**
- **Problembereiche:** Ungleichm√§√üige Wasseraufnahme, Staun√§sse
- **Vertrauensgrad:** 78%
- **Sofortige L√∂sung:** Aerifizierung erforderlich
- **Gesch√§tzte Kosten:** 15-30‚Ç¨ f√ºr Ger√§te-Miete

**Detaillierte L√∂sungsschritte:**
- Aerifizierung mit 5cm tiefen L√∂chern bei feuchtem Boden
- Groben Sand in Bel√ºftungsl√∂cher einarbeiten
- Bew√§sserungszeiten auf fr√ºhe Morgenstunden (5-7 Uhr) verlegen
- Installation von Bodenfeuchtesensoren erw√§gen

üí° **Umfassender 3-Phasen-L√∂sungsplan**

**Phase 1: Sofortma√ünahmen (diese Woche)**
‚úì Professionellen Bodentest durchf√ºhren
‚úì Aerifizierung bei optimalem Bodenzustand
‚úì Bew√§sserungssystem auf Morgenzeiten umstellen
‚úì Dokumentation der Ausgangssituation mit Fotos

**Phase 2: Kurzfristige Verbesserungen (2-4 Wochen)**
‚úì Gezielte D√ºngung basierend auf Bodentest-Ergebnissen
‚úì Nachsaat kahler Stellen mit klimaangepasster Rasenmischung
‚úì Mechanische Unkrautentfernung bei feuchtem Boden
‚úì Installation automatischer Bew√§sserung mit Timern

**Phase 3: Langfristige Strategie (Saisonplanung)**
‚úì Monatlicher Pflegekalender mit Foto-Dokumentation
‚úì Pr√§ventive Unkraut- und Sch√§dlingskontrolle
‚úì J√§hrliche Bodenanalyse im Fr√ºhjahr
‚úì Aufbau einer dichten, widerstandsf√§higen Grasnarbe

üõí **Professionelle Produktempfehlungen**

**D√ºnger & Bodenverbesserung:**
- Compo Rasen Langzeit-D√ºnger (20kg) - ‚Ç¨29,99 ‚≠ê4.5/5
- Substral Herbst Rasend√ºnger mit Kalium - ‚Ç¨22,50 ‚≠ê4.3/5
- Neudorff Azet RasenD√ºnger - ‚Ç¨24,99 (Bio-Option) ‚≠ê4.4/5

**Ger√§te & Hilfsmittel:**
- Gardena Aerifizierer Professional - ‚Ç¨24,99 ‚≠ê4.7/5
- Bodentest-Kit pH/NPK Professional - ‚Ç¨15,99 ‚≠ê4.6/5
- Bew√§sserungscomputer mit Sensoren - ‚Ç¨45,99 ‚≠ê4.2/5

**Pflanzenschutz:**
- Celaflor Rasen-Unkrautfrei Weedex - ‚Ç¨18,99 ‚≠ê4.4/5
- Wolf Garten Turbo-Nachsaat LR 25 - ‚Ç¨19,99 ‚≠ê4.5/5

üìÖ **Detaillierter Monatskalender**

**M√§rz 2024:**
üéØ **Hauptziel:** Wintersch√§den beheben, Saison vorbereiten
- Erste Inspektion und Schadensdokumentation
- Vertikutieren bei trockenem Boden (ab 10¬∞C)
- Startd√ºngung mit Langzeitwirkung
- Reparatur von Frostsch√§den

**April 2024:**
üéØ **Hauptziel:** Regeneration und Wachstumsf√∂rderung
- Nachsaat kahler Stellen (optimale Keimtemperatur)
- Selektive Unkrautbek√§mpfung beginnen
- Erste Mahd bei 8cm Wuchsh√∂he
- Bew√§sserungsanlage √ºberpr√ºfen und einstellen

**Mai 2024:**
üéØ **Hauptziel:** Etablierung der Sommerpflege
- Regelm√§√üige Bew√§sserungsroutine (3x w√∂chentlich)
- Zweite D√ºngergabe nach 6-8 Wochen
- Rasenkanten professionell schneiden
- Sch√§dlings- und Krankheitskontrolle

üî¨ **Erweiterte Pflegetipps**

**Optimale M√§hpraxis:**
- Ein-Drittel-Regel: Nur 1/3 der Halml√§nge entfernen
- Scharfe Messer f√ºr saubere Schnitte verwenden
- Schnitth√∂he saisonal anpassen (Sommer: 4-5cm, Winter: 5cm)
- Mulchm√§hen f√ºr nat√ºrliche N√§hrstoffzufuhr

**Professionelle Bew√§sserung:**
- Tiefes, weniger h√§ufiges W√§ssern (2-3x pro Woche)
- Wassermenge: 15-20mm pro Bew√§sserung
- Fr√ºhe Morgenstunden (5-7 Uhr) f√ºr minimale Verdunstung
- Bodenfeuchtigkeit vor Bew√§sserung pr√ºfen

**Vorbeugung & Gesunderhaltung:**
- Regelm√§√üige Bodenbel√ºftung (j√§hrlich im Herbst)
- pH-Wert zwischen 6,0-7,0 halten
- Organische D√ºnger f√ºr nachhaltige N√§hrstoffversorgung
- Rasenmischungen an lokales Klima anpassen`;
  };

  const handleAnalyzeImage = async (rasenproblem: string, updateData: (updates: any) => void) => {
    console.log('=== Starting comprehensive image analysis ===');
    console.log('Problem description:', rasenproblem);
    setIsAnalyzing(true);
    
    try {
      // Get the image URL from localStorage
      const imageUrl = localStorage.getItem('currentImageUrl');
      console.log('Image URL from localStorage:', imageUrl);
      
      if (!imageUrl) {
        console.log('No image URL found');
        throw new Error('Kein Bild gefunden. Bitte lade zuerst ein Bild hoch.');
      }

      console.log('=== Calling analyzeImageWithAI with blob URL ===');
      
      // Call the updated function that can handle blob URLs
      const result = await analyzeImageWithAI(
        imageUrl, // This will be converted from blob URL to File
        'unknown',
        rasenproblem || 'Umfassende Rasenanalyse'
      );

      console.log('=== AI Analysis response ===');
      console.log('Result:', result);

      if (result.success && result.analysis) {
        console.log('=== Processing successful comprehensive analysis ===');
        // Convert structured analysis to detailed formatted text
        const structuredAnalysis = result.analysis;
        let formattedAnalysis = `üå± **Umfassende Rasenanalyse - Professioneller Bericht**\n\n`;
        
        if (structuredAnalysis.overallHealth) {
          formattedAnalysis += `**Gesamtgesundheit:** ${structuredAnalysis.overallHealth}/10 (${structuredAnalysis.overallHealth * 10}%)\n\n`;
        }
        
        if (structuredAnalysis.issues && structuredAnalysis.issues.length > 0) {
          formattedAnalysis += `üîç **Detaillierte Problemanalyse**\n\n`;
          structuredAnalysis.issues.forEach((issue, index) => {
            formattedAnalysis += `**${index + 1}. ${issue.issue}**\n`;
            formattedAnalysis += `- **Schweregrad:** ${issue.severity === 'high' ? 'Hoch' : issue.severity === 'medium' ? 'Mittel' : 'Niedrig'}\n`;
            formattedAnalysis += `- **Vertrauensgrad:** ${Math.round(issue.confidence * 100)}%\n`;
            if (issue.timeline) formattedAnalysis += `- **Zeitrahmen:** ${issue.timeline}\n`;
            if (issue.cost) formattedAnalysis += `- **Gesch√§tzte Kosten:** ${issue.cost}\n\n`;
            
            formattedAnalysis += `**Spezifische Empfehlungen:**\n`;
            issue.recommendations.forEach(rec => {
              formattedAnalysis += `- ${rec}\n`;
            });
            
            if (issue.products && issue.products.length > 0) {
              formattedAnalysis += `\n**Empfohlene Produkte:**\n`;
              issue.products.forEach(product => {
                formattedAnalysis += `- ${product}\n`;
              });
            }
            formattedAnalysis += `\n`;
          });
        }
        
        if (structuredAnalysis.generalRecommendations && structuredAnalysis.generalRecommendations.length > 0) {
          formattedAnalysis += `üí° **Allgemeine Empfehlungen**\n`;
          structuredAnalysis.generalRecommendations.forEach(rec => {
            formattedAnalysis += `‚úì ${rec}\n`;
          });
          formattedAnalysis += `\n`;
        }

        if (structuredAnalysis.seasonalAdvice && structuredAnalysis.seasonalAdvice.length > 0) {
          formattedAnalysis += `üìÖ **Saisonale Pflegehinweise**\n`;
          structuredAnalysis.seasonalAdvice.forEach(advice => {
            formattedAnalysis += `${advice}\n`;
          });
          formattedAnalysis += `\n`;
        }

        if (structuredAnalysis.monthlyPlan && structuredAnalysis.monthlyPlan.length > 0) {
          formattedAnalysis += `üìã **Monatlicher Pflegeplan**\n`;
          structuredAnalysis.monthlyPlan.forEach(plan => {
            formattedAnalysis += `**${plan.month}:**\n`;
            plan.tasks.forEach(task => {
              formattedAnalysis += `- ${task}\n`;
            });
            formattedAnalysis += `\n`;
          });
        }
        
        console.log('Comprehensive formatted analysis:', formattedAnalysis);
        setAnalysisResults(formattedAnalysis);
        setShowAnalysis(true);
        updateData({ analysisCompleted: true });
        toast.success('Umfassende KI-Bildanalyse erfolgreich abgeschlossen!');
      } else {
        console.log('=== Analysis failed, using comprehensive fallback ===');
        console.log('Error:', result.error);
        // Fallback to comprehensive mock analysis
        const comprehensiveAnalysis = getComprehensiveMockAnalysis();
        console.log('Using comprehensive mock analysis as fallback');
        setAnalysisResults(comprehensiveAnalysis);
        setShowAnalysis(true);
        updateData({ analysisCompleted: true });
        toast.info('Erweiterte Demo-Analyse wird angezeigt (KI-Service vor√ºbergehend nicht verf√ºgbar)');
      }
    } catch (error) {
      console.error('=== Error in comprehensive analysis ===');
      console.error('Error details:', error);
      // Fallback to comprehensive mock analysis
      const comprehensiveAnalysis = getComprehensiveMockAnalysis();
      console.log('Using comprehensive mock analysis as fallback due to error');
      setAnalysisResults(comprehensiveAnalysis);
      setShowAnalysis(true);
      updateData({ analysisCompleted: true });
      toast.info('Erweiterte Demo-Analyse wird angezeigt (Fehler bei KI-Analyse)');
    } finally {
      setIsAnalyzing(false);
    }
  };

  return {
    analysisResults,
    showAnalysis,
    isAnalyzing,
    handleAnalyzeImage
  };
};
